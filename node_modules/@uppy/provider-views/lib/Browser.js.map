{"version":3,"names":["h","VirtualList","useEffect","useState","Item","Browser","props","displayedPartialTree","viewType","toggleCheckbox","handleScroll","showTitles","i18n","isLoading","openFolder","noResultsLabel","virtualList","utmSource","isShiftKeyPressed","setIsShiftKeyPressed","handleKeyUp","e","key","handleKeyDown","document","addEventListener","removeEventListener","className","length","renderItem","item","event","_document$getSelectio","stopPropagation","preventDefault","getSelection","removeAllRanges","file","data","renderRow","rowHeight","onScroll","role","tabIndex","map"],"sources":["Browser.tsx"],"sourcesContent":["import { h } from 'preact'\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore untyped\nimport VirtualList from '@uppy/utils/lib/VirtualList'\nimport type {\n  Body,\n  Meta,\n  PartialTreeFile,\n  PartialTreeFolderNode,\n} from '@uppy/core'\nimport type { I18n } from '@uppy/utils/lib/Translator'\nimport { useEffect, useState } from 'preact/hooks'\nimport Item from './Item/index.jsx'\nimport ProviderView from './ProviderView/ProviderView.jsx'\n\ntype BrowserProps<M extends Meta, B extends Body> = {\n  displayedPartialTree: (PartialTreeFile | PartialTreeFolderNode)[]\n  viewType: string\n  toggleCheckbox: ProviderView<M, B>['toggleCheckbox']\n  handleScroll: ProviderView<M, B>['handleScroll']\n  showTitles: boolean\n  i18n: I18n\n  isLoading: boolean | string\n  openFolder: ProviderView<M, B>['openFolder']\n  noResultsLabel: string\n  virtualList: boolean\n  utmSource: string\n}\n\nfunction Browser<M extends Meta, B extends Body>(props: BrowserProps<M, B>) {\n  const {\n    displayedPartialTree,\n    viewType,\n    toggleCheckbox,\n    handleScroll,\n    showTitles,\n    i18n,\n    isLoading,\n    openFolder,\n    noResultsLabel,\n    virtualList,\n    utmSource,\n  } = props\n\n  const [isShiftKeyPressed, setIsShiftKeyPressed] = useState(false)\n\n  // This records whether the user is holding the SHIFT key this very moment.\n  // Typically, this is implemented using `onClick((e) => e.shiftKey)` -\n  // however we can't use that, because for accessibility reasons\n  // we're using html tags that don't support `e.shiftKey` property (see #3768).\n  useEffect(() => {\n    const handleKeyUp = (e: KeyboardEvent) => {\n      if (e.key === 'Shift') setIsShiftKeyPressed(false)\n    }\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (e.key === 'Shift') setIsShiftKeyPressed(true)\n    }\n    document.addEventListener('keyup', handleKeyUp)\n    document.addEventListener('keydown', handleKeyDown)\n    return () => {\n      document.removeEventListener('keyup', handleKeyUp)\n      document.removeEventListener('keydown', handleKeyDown)\n    }\n  }, [])\n\n  if (isLoading) {\n    return (\n      <div className=\"uppy-Provider-loading\">\n        {typeof isLoading === 'string' ? isLoading : i18n('loading')}\n      </div>\n    )\n  }\n\n  if (displayedPartialTree.length === 0) {\n    return <div className=\"uppy-Provider-empty\">{noResultsLabel}</div>\n  }\n\n  const renderItem = (item: PartialTreeFile | PartialTreeFolderNode) => (\n    <Item\n      viewType={viewType}\n      toggleCheckbox={(event: Event) => {\n        event.stopPropagation()\n        event.preventDefault()\n        // Prevent shift-clicking from highlighting file names\n        // (https://stackoverflow.com/a/1527797/3192470)\n        document.getSelection()?.removeAllRanges()\n        toggleCheckbox(item, isShiftKeyPressed)\n      }}\n      showTitles={showTitles}\n      i18n={i18n}\n      openFolder={openFolder}\n      file={item}\n      utmSource={utmSource}\n    />\n  )\n\n  if (virtualList) {\n    return (\n      <div className=\"uppy-ProviderBrowser-body\">\n        <ul className=\"uppy-ProviderBrowser-list\">\n          <VirtualList\n            data={displayedPartialTree}\n            renderRow={renderItem}\n            rowHeight={31}\n          />\n        </ul>\n      </div>\n    )\n  }\n  return (\n    <div className=\"uppy-ProviderBrowser-body\">\n      <ul\n        className=\"uppy-ProviderBrowser-list\"\n        onScroll={handleScroll}\n        role=\"listbox\"\n        // making <ul> not focusable for firefox\n        tabIndex={-1}\n      >\n        {displayedPartialTree.map(renderItem)}\n      </ul>\n    </div>\n  )\n}\n\nexport default Browser\n"],"mappings":"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","ignoreList":[]}