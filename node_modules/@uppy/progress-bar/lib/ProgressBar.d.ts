import { type ComponentChild } from 'preact';
import { UIPlugin } from '@uppy/core';
import type { Uppy, State, UIPluginOptions, Body, Meta, DefinePluginOpts } from '@uppy/core';
export interface ProgressBarOptions extends UIPluginOptions {
    hideAfterFinish?: boolean;
    fixed?: boolean;
}
declare const defaultOptions: {
    fixed: boolean;
    hideAfterFinish: boolean;
};
type Opts = DefinePluginOpts<ProgressBarOptions, keyof typeof defaultOptions>;
/**
 * Progress bar
 *
 */
export default class ProgressBar<M extends Meta, B extends Body> extends UIPlugin<Opts, M, B> {
    static VERSION: any;
    constructor(uppy: Uppy<M, B>, opts?: ProgressBarOptions);
    render(state: State<M, B>): ComponentChild;
    install(): void;
    uninstall(): void;
}
export {};
//# sourceMappingURL=ProgressBar.d.ts.map