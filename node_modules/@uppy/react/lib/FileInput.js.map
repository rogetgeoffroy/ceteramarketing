{"version":3,"names":["createElement","h","Component","FileInputPlugin","FileInput","componentDidMount","installPlugin","componentDidUpdate","prevProps","uppy","props","uninstallPlugin","componentWillUnmount","locale","pretty","inputName","id","options","target","container","use","plugin","getPlugin","removePlugin","render","className","ref","defaultProps","undefined"],"sources":["FileInput.ts"],"sourcesContent":["import { createElement as h, Component } from 'react'\nimport type {\n  UIPluginOptions,\n  UnknownPlugin,\n  Uppy,\n  Body,\n  Meta,\n} from '@uppy/core'\nimport FileInputPlugin from '@uppy/file-input'\nimport type { Locale } from '@uppy/utils/lib/Translator'\n\ninterface FileInputProps<M extends Meta, B extends Body>\n  extends UIPluginOptions {\n  uppy: Uppy<M, B>\n  locale?: Locale\n  pretty?: boolean\n  inputName?: string\n}\n\n/**\n * React component that renders an area in which files can be dropped to be\n * uploaded.\n */\n\nclass FileInput<M extends Meta, B extends Body> extends Component<\n  FileInputProps<M, B>\n> {\n  // Must be kept in sync with @uppy/file-input/src/FileInput.jsx\n  static defaultProps = {\n    locale: undefined,\n    pretty: true,\n    inputName: 'files[]',\n  }\n\n  private container!: HTMLElement\n\n  private plugin?: UnknownPlugin<M, B>\n\n  componentDidMount(): void {\n    this.installPlugin()\n  }\n\n  componentDidUpdate(prevProps: FileInputProps<M, B>): void {\n    // eslint-disable-next-line react/destructuring-assignment\n    if (prevProps.uppy !== this.props.uppy) {\n      this.uninstallPlugin(prevProps)\n      this.installPlugin()\n    }\n  }\n\n  componentWillUnmount(): void {\n    this.uninstallPlugin()\n  }\n\n  installPlugin(): void {\n    const { uppy, locale, pretty, inputName, id } = this.props\n    const options = {\n      id: id || 'FileInput',\n      locale,\n      pretty,\n      inputName,\n      target: this.container,\n    }\n\n    uppy.use(FileInputPlugin, options)\n\n    this.plugin = uppy.getPlugin(options.id)!\n  }\n\n  uninstallPlugin(props = this.props): void {\n    const { uppy } = props\n\n    uppy.removePlugin(this.plugin!)\n  }\n\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  render() {\n    return h('div', {\n      className: 'uppy-Container',\n      ref: (container: HTMLElement) => {\n        this.container = container\n      },\n    })\n  }\n}\n\nexport default FileInput\n"],"mappings":"AAAA,SAASA,aAAa,IAAIC,CAAC,EAAEC,SAAS,QAAQ,OAAO;AAQrD,OAAOC,eAAe,MAAM,kBAAkB;AAW9C;AACA;AACA;AACA;;AAEA,MAAMC,SAAS,SAAyCF,SAAS,CAE/D;EAYAG,iBAAiBA,CAAA,EAAS;IACxB,IAAI,CAACC,aAAa,CAAC,CAAC;EACtB;EAEAC,kBAAkBA,CAACC,SAA+B,EAAQ;IACxD;IACA,IAAIA,SAAS,CAACC,IAAI,KAAK,IAAI,CAACC,KAAK,CAACD,IAAI,EAAE;MACtC,IAAI,CAACE,eAAe,CAACH,SAAS,CAAC;MAC/B,IAAI,CAACF,aAAa,CAAC,CAAC;IACtB;EACF;EAEAM,oBAAoBA,CAAA,EAAS;IAC3B,IAAI,CAACD,eAAe,CAAC,CAAC;EACxB;EAEAL,aAAaA,CAAA,EAAS;IACpB,MAAM;MAAEG,IAAI;MAAEI,MAAM;MAAEC,MAAM;MAAEC,SAAS;MAAEC;IAAG,CAAC,GAAG,IAAI,CAACN,KAAK;IAC1D,MAAMO,OAAO,GAAG;MACdD,EAAE,EAAEA,EAAE,IAAI,WAAW;MACrBH,MAAM;MACNC,MAAM;MACNC,SAAS;MACTG,MAAM,EAAE,IAAI,CAACC;IACf,CAAC;IAEDV,IAAI,CAACW,GAAG,CAACjB,eAAe,EAAEc,OAAO,CAAC;IAElC,IAAI,CAACI,MAAM,GAAGZ,IAAI,CAACa,SAAS,CAACL,OAAO,CAACD,EAAE,CAAE;EAC3C;EAEAL,eAAeA,CAACD,KAAK,EAAqB;IAAA,IAA1BA,KAAK;MAALA,KAAK,GAAG,IAAI,CAACA,KAAK;IAAA;IAChC,MAAM;MAAED;IAAK,CAAC,GAAGC,KAAK;IAEtBD,IAAI,CAACc,YAAY,CAAC,IAAI,CAACF,MAAO,CAAC;EACjC;;EAEA;EACAG,MAAMA,CAAA,EAAG;IACP,OAAOvB,CAAC,CAAC,KAAK,EAAE;MACdwB,SAAS,EAAE,gBAAgB;MAC3BC,GAAG,EAAGP,SAAsB,IAAK;QAC/B,IAAI,CAACA,SAAS,GAAGA,SAAS;MAC5B;IACF,CAAC,CAAC;EACJ;AACF;AAzDE;AAHIf,SAAS,CAINuB,YAAY,GAAG;EACpBd,MAAM,EAAEe,SAAS;EACjBd,MAAM,EAAE,IAAI;EACZC,SAAS,EAAE;AACb,CAAC;AAsDH,eAAeX,SAAS","ignoreList":[]}