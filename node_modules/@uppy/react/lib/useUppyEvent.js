import { useEffect, useState } from 'react';
export default function useUppyEvent(uppy, event, callback) {
  const [result, setResult] = useState([]);
  const clear = () => setResult([]);
  useEffect(() => {
    const handler = function () {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      setResult(args);
      // eslint-disable-next-line node/no-callback-literal
      callback == null || callback(...args);
    };
    uppy.on(event, handler);
    return function cleanup() {
      uppy.off(event, handler);
    };
  }, [uppy, event, callback]);
  return [result, clear];
}